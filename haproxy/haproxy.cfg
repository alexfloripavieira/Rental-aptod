global
    daemon
    maxconn 4096
    log stdout local0 info

defaults
    mode http
    timeout connect 5000ms
    timeout client 50000ms
    timeout server 50000ms
    option httplog
    option dontlognull
    option redispatch
    retries 3

stats enable
stats uri /stats
stats refresh 10s
stats admin if TRUE

frontend health_check
    bind *:8404
    http-request return status 200 content-type text/plain string "OK" if { path /health }

frontend https_frontend
    bind *:443
    http-request set-var(req.active_env) str(blue) if { -f /usr/local/etc/haproxy/active_blue }
    http-request set-var(req.active_env) str(green) if { -f /usr/local/etc/haproxy/active_green }
    use_backend backend_blue if { var(req.active_env) -m str blue }
    use_backend backend_green if { var(req.active_env) -m str green }
    default_backend backend_blue

frontend http_frontend
    bind *:80
    use_backend backend_blue if { -f /usr/local/etc/haproxy/active_blue }
    use_backend backend_green if { -f /usr/local/etc/haproxy/active_green }
    default_backend backend_blue

backend backend_blue
    balance roundrobin
    option httpchk GET /api/v1/health/
    http-check expect status 200
    server backend-blue aptos-backend-blue:8000 check inter 10s fall 3 rise 2
    # frontend check is optional; API health is authoritative

backend backend_green
    balance roundrobin
    option httpchk GET /api/v1/health/
    http-check expect status 200
    server backend-green aptos-backend-green:8000 check inter 10s fall 3 rise 2

