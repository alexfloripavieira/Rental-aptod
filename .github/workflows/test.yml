name: Test Suite

on:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main ]

jobs:
  backend-tests:
    runs-on: ubuntu-latest
    services:
      postgres:
        image: postgres:15
        env:
          POSTGRES_PASSWORD: postgres
          POSTGRES_DB: test_aptos
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-python@v4
        with:
          python-version: '3.11'
      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt
          pip install coverage
      - name: Run Django tests with coverage
        env:
          DATABASE_URL: postgresql://postgres:postgres@localhost/test_aptos
        run: |
          coverage run --source='aptos' manage.py test
          coverage report --fail-under=80
          coverage xml
      - uses: codecov/codecov-action@v3

  frontend-tests:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-node@v4
        with:
          node-version: '20.19.0'
          cache: 'npm'
          cache-dependency-path: frontend/package-lock.json
      - name: Install and test
        run: |
          cd frontend
          npm install
          npm run test:coverage
      - uses: codecov/codecov-action@v3
        with:
          directory: frontend/coverage

  e2e-tests:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - name: Set up Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20.19.0'
      - name: Build and start test stack
        run: |
          docker version
          docker compose version
          docker compose -f docker-compose.test.yml up -d --build
      - name: Run backend migrations
        run: |
          docker compose -f docker-compose.test.yml exec -T backend python manage.py migrate --noinput
      - name: Wait for services to be healthy
        run: |
          set -e
          for i in {1..60}; do
            curl -sSf -o /dev/null http://localhost:3001/aptos && break || true
            sleep 2
          done
          curl -sSf -o /dev/null http://localhost:8001/api/v1/health/
      - name: Install Playwright Browsers
        uses: microsoft/playwright-github-action@v1
      - name: Install Playwright package
        run: npm install --no-save @playwright/test
      - name: Run Playwright tests
        env:
          BASE_URL: http://localhost:3001
        run: npx playwright test --config=playwright.config.ts
      - name: Upload Playwright report
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: playwright-report
          path: playwright-report/
